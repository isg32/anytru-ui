{"ast":null,"code":"var _jsxFileName = \"/home/isg32/project/AnyTru/anytru/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Navbar.css';\nimport usericonimage from '../assets/images/user-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [email, setEmail] = useState(null);\n  const navigate = useNavigate();\n  const userIcon = usericonimage; // Replace with the URL or path to the user icon\n\n  // Fetch email from localStorage or sessionStorage\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('userEmail'); // Retrieve the email from storage\n    if (storedEmail) {\n      setEmail(storedEmail);\n    }\n  }, []);\n  const handleLogout = () => {\n    // Clear the user's session or authentication state\n    console.log('Logging out...');\n    localStorage.removeItem('userEmail'); // Clear the stored email\n    navigate('/'); // Redirect to the sign-in page after logout\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userIcon,\n        alt: \"User Icon\",\n        className: \"user-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), email ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"username\",\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"username\",\n        children: \"Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      className: \"logout-btn\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"lHwG6EyaT2Wgg+Kbgr3Xst7aEgQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","usericonimage","jsxDEV","_jsxDEV","Navbar","_s","email","setEmail","navigate","userIcon","storedEmail","localStorage","getItem","handleLogout","console","log","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/home/isg32/project/AnyTru/anytru/src/components/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Navbar.css';\nimport usericonimage from '../assets/images/user-icon.png';\n\nfunction Navbar() {\n  const [email, setEmail] = useState(null);\n  const navigate = useNavigate();\n  const userIcon = usericonimage; // Replace with the URL or path to the user icon\n\n  // Fetch email from localStorage or sessionStorage\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('userEmail'); // Retrieve the email from storage\n    if (storedEmail) {\n      setEmail(storedEmail);\n    }\n  }, []);\n\n  const handleLogout = () => {\n    // Clear the user's session or authentication state\n    console.log('Logging out...');\n    localStorage.removeItem('userEmail');  // Clear the stored email\n    navigate('/');  // Redirect to the sign-in page after logout\n  };\n\n  return (\n    <nav className=\"navbar\">\n      <h1>Dashboard</h1>\n      <div className=\"user-info\">\n        <img src={userIcon} alt=\"User Icon\" className=\"user-icon\" />\n        {email ? <span className=\"username\">{email}</span> : <span className=\"username\">Guest</span>}\n      </div>\n      <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,sBAAsB;AAC7B,OAAOC,aAAa,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,aAAa,CAAC,CAAC;;EAEhC;EACAH,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IACvD,IAAIF,WAAW,EAAE;MACfH,QAAQ,CAACG,WAAW,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BJ,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC,CAAC,CAAE;IACvCR,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAE;EAClB,CAAC;EAED,oBACEL,OAAA;IAAKc,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBnB,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBf,OAAA;QAAKoB,GAAG,EAAEd,QAAS;QAACe,GAAG,EAAC,WAAW;QAACP,SAAS,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC3DhB,KAAK,gBAAGH,OAAA;QAAMc,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEZ;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,gBAAGnB,OAAA;QAAMc,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzF,CAAC,eACNnB,OAAA;MAAQsB,OAAO,EAAEZ,YAAa;MAACI,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEV;AAACjB,EAAA,CA9BQD,MAAM;EAAA,QAEIJ,WAAW;AAAA;AAAA0B,EAAA,GAFrBtB,MAAM;AAgCf,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}