{"ast":null,"code":"var _jsxFileName = \"/home/isg32/project/AnyTru/anytru/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const navigate = useNavigate();\n  const handleLogout = () => {\n    // Clear user session (in real case, clear authentication tokens)\n    localStorage.removeItem('user'); // Example if you had user data in localStorage\n    navigate('/');\n  };\n\n  // Assuming a simple user check for profile icon (in real-world, you'd use authentication state)\n  const user = JSON.parse(localStorage.getItem('user'));\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"user-icon.png\",\n        alt: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","Navbar","_s","navigate","handleLogout","localStorage","removeItem","user","JSON","parse","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","src","alt","onClick","_c","$RefreshReg$"],"sources":["/home/isg32/project/AnyTru/anytru/src/components/Navbar.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Navbar.css';\n\nfunction Navbar() {\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    // Clear user session (in real case, clear authentication tokens)\n    localStorage.removeItem('user'); // Example if you had user data in localStorage\n    navigate('/');\n  };\n\n  // Assuming a simple user check for profile icon (in real-world, you'd use authentication state)\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  return (\n    <nav className=\"navbar\">\n      <h1>Dashboard</h1>\n      {user && (\n        <div className=\"user-info\">\n          <span>{user.name}</span>\n          <img src=\"user-icon.png\" alt=\"User\" />\n        </div>\n      )}\n      <button onClick={handleLogout}>Logout</button>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACjCH,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;;EAED;EACA,MAAMI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACK,OAAO,CAAC,MAAM,CAAC,CAAC;EAErD,oBACEV,OAAA;IAAKW,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBZ,OAAA;MAAAY,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBT,IAAI,iBACHP,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBZ,OAAA;QAAAY,QAAA,EAAOL,IAAI,CAACU;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBhB,OAAA;QAAKkB,GAAG,EAAC,eAAe;QAACC,GAAG,EAAC;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACN,eACDhB,OAAA;MAAQoB,OAAO,EAAEhB,YAAa;MAAAQ,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAACd,EAAA,CAxBQD,MAAM;EAAA,QACIH,WAAW;AAAA;AAAAuB,EAAA,GADrBpB,MAAM;AA0Bf,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}